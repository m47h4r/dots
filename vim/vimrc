" ======================================================================
" Usability configuration
" ======================================================================

" set incompatible with vi
set nocompatible

" required
filetype off

" syntax
syntax on

" encoding utf 8
set encoding=utf-8
set fileencoding=utf-8

" line number
" set number relativenumber
set number

" enable matchit plugin which ships with vim and greatly enhances '%'
runtime macros/matchit.vim

" by default, in insert mode backspace won't delete over line breaks, or
" automatically-inserted indentation, let's change that
set backspace=indent,eol,start

" ======================================================================
" Customization
" ======================================================================

" search
" find next match as typing
set incsearch
" hilight searches
set hlsearch

" indentation
set autoindent
set tabstop=4
set shiftwidth=4

" tab replacement
set list
set listchars=tab:\|-
set nocp
set clipboard=unnamed
set clipboard=unnamedplus
set ignorecase

" keep the cursor visible within 3 lines when scrolling
set scrolloff=3

" <C-Space> for Vim's keyword autocomplete
inoremap <Nul> <C-n>

" paste mode
set pastetoggle=<f9>

" select all with <leader>a (default \a)
noremap <leader>a ggVG

" next file
noremap <leader>n :bn<CR>
" prev file
noremap <leader>p :bp<CR>

" colorscheme
" needs the file in ~/.vim/colors/deus.vim
colorscheme deus

" open current file in firefox and chromium
nnoremap <F12>f :exe ':silent !firefox %'<CR>
nnoremap <F12>c :exe ':silent !chromium-browser %'<CR>

" unhighlight search results using <Ctrl-l>
nnoremap <silent> <C-l> :nohl<CR><C-l>

" ease use of curly brackets for JS
inoremap {{ {}<Left>
inoremap {{{ {<Enter>}<Esc>O
" ease use of square brackets
inoremap [[ []<Left>
" ease use of paranthesis for JS
inoremap (( ()<Left>
" ease use of double and single quotes for JS
inoremap "" ""<Left>
inoremap '' ''<Left>
inoremap `` ``<Left>
" ease use of comma and semicolon in for JS
inoremap ,, <ESC>A,
inoremap ;; <ESC>A;

" highlight number
"highlight LineNr ctermfg = grey

"set cursorline
"hi CursorLine ctermbg=grey30 "ctermfg=15 "8 = dark gray, 15 = white
"hi Cursor ctermbg=15 ctermfg=8

" put a vertical line at column 80
set colorcolumn=80

" ======================================================================
" Plugin configuration
" ======================================================================

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-scripts/L9'
Plugin 'itchyny/lightline.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'pangloss/vim-javascript'
Plugin 'mattn/emmet-vim'
Plugin 'easymotion/vim-easymotion'


call vundle#end()
filetype plugin indent on

" start NERDTree on start-up and focus active window
" autocmd vimenter * NERDTree
" toggle nerd tree
map <C-b> :NERDTreeToggle<CR>

" lightline requires this to work properly
set laststatus=2

" concealing characters for js
let g:javascript_conceal_function                  = "Æ’"
let g:javascript_conceal_null                      = "Ã¸"
let g:javascript_conceal_this                      = "@"
let g:javascript_conceal_return                    = "â‡š"
let g:javascript_conceal_undefined                 = "Â¿"
let g:javascript_conceal_NaN                       = "â„•"
let g:javascript_conceal_prototype                 = "Â¶"
let g:javascript_conceal_static                    = "â€¢"
let g:javascript_conceal_super                     = "Î©"
let g:javascript_conceal_arrow_function            = "â‡’"
let g:javascript_conceal_noarg_arrow_function      = "ðŸž…"
let g:javascript_conceal_underscore_arrow_function = "ðŸž…"
set conceallevel=1 " enables concealing
" and to toggle concealing use \l
map <leader>l :exec &conceallevel ? "set conceallevel=0" : "set conceallevel=1"<CR>
